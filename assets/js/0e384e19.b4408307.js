"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[976],{7879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"intro","title":"Description","description":"The view std::transform_view ()","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/transform_view_26/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"API","permalink":"/transform_view_26/docs/category/api"}}');var o=n(4848),i=n(8453);const s={sidebar_position:1},a="Description",c={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Paper:n,Stdref:r}=t;return n||u("Paper",!0),r||u("Stdref",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"description",children:"Description"})}),"\n",(0,o.jsxs)(t.p,{children:["The view ",(0,o.jsx)(t.code,{children:"std::ranges::transform_view"})," (",(0,o.jsx)(r,{ref:"range.transform"}),")\nintroduced with C++20 is unconditionally a non-borrowed range (see ",(0,o.jsx)(r,{ref:"range.range"}),").  ",(0,o.jsx)(n,{num:"P3117"})," was written to address this,\nmaking ",(0,o.jsx)(t.code,{children:"transform_view"})," conditionally borrowable."]}),"\n",(0,o.jsxs)(t.p,{children:["The condition for its borrowability is that the callable ",(0,o.jsx)(t.code,{children:"F"})," given to\n",(0,o.jsx)(t.code,{children:"std::ranges::transform_view"}),' must have properties that allow its trivial\nconstruction and destruction, on-demand.  The paper calls this property being\n"tidy".  This is the exposition-only concept that determines tidiness:']}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"template<class F>\n  constexpr bool tidy-func =\n    is_empty_v<F> && is_trivially_default_constructible_v<F> && is_trivially_destructible_v<F>;\n"})}),"\n",(0,o.jsx)(t.h1,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(t.p,{children:["To use the revised version of ",(0,o.jsx)(t.code,{children:"transform_view"}),", simply use it as you would\n",(0,o.jsx)(t.code,{children:"std::ranges::transform_view"}),".  If the template parameter ",(0,o.jsx)(t.code,{children:"F"}),' you use is\n"tidy", your ',(0,o.jsx)(t.code,{children:"transform_view"})," will be a borrowed range."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);